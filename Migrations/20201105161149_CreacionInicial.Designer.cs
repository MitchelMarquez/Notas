// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notas.Models;

namespace Notas.Migrations
{
    [DbContext(typeof(NotasContext))]
    [Migration("20201105161149_CreacionInicial")]
    partial class CreacionInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("Notas.Models.Nota", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreadorMail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cuerpo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("CreadorMail");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("Notas.Models.Usuario", b =>
                {
                    b.Property<string>("Mail")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Mail");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Notas.Models.Nota", b =>
                {
                    b.HasOne("Notas.Models.Usuario", "Creador")
                        .WithMany("Notas")
                        .HasForeignKey("CreadorMail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
